	component DE0_Nano_SOPC is
		port (
			UART_RXD_to_the_RS232_0                   : in  std_logic                     := 'X';             -- export
			UART_TXD_from_the_RS232_0                 : out std_logic;                                        -- export
			adc_controller_0_conduit_end_sys_clk      : in  std_logic                     := 'X';             -- sys_clk
			adc_controller_0_conduit_end_ADC_CONVST   : out std_logic;                                        -- ADC_CONVST
			adc_controller_0_conduit_end_ADC_SDI      : out std_logic;                                        -- ADC_SDI
			adc_controller_0_conduit_end_ADC_SCK      : out std_logic;                                        -- ADC_SCK
			adc_controller_0_conduit_end_ADC_SDO      : in  std_logic                     := 'X';             -- ADC_SDO
			clk_50                                    : in  std_logic                     := 'X';             -- clk
			reset_n                                   : in  std_logic                     := 'X';             -- reset_n
			in_port_to_the_key                        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			out_port_from_the_led                     : out std_logic_vector(7 downto 0);                     -- export
			GPIO_out_from_the_motor_controller_0      : out std_logic_vector(31 downto 0);                    -- export
			pll_0_locked_export                       : out std_logic;                                        -- export
			pll_0_outclk1_clk                         : out std_logic;                                        -- clk
			pll_0_outclk3_clk                         : out std_logic;                                        -- clk
			pll_adc_clk                               : out std_logic;                                        -- clk
			pll_io_clk                                : out std_logic;                                        -- clk
			pll_sys_clk                               : out std_logic;                                        -- clk
			kill_sw_from_the_power_management_slave_0 : out std_logic;                                        -- kill_sw
			mux_from_the_power_management_slave_0     : out std_logic_vector(2 downto 0);                     -- mux
			data_to_the_power_management_slave_0      : in  std_logic                     := 'X';             -- data
			in_port_to_the_sw                         : in  std_logic_vector(3 downto 0)  := (others => 'X')  -- export
		);
	end component DE0_Nano_SOPC;

